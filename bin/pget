#!/usr/bin/env python3
import threading
import sys
from urllib.parse import urlparse

try:
    import requests
except ImportError:
    pass


class Downloader(object):

    HTTP_HEADERS = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.79 Safari/537.36'}

    def __init__(self, url, name='', num=5):
        self.url = url
        self._name = name
        self.num = num
        assert self.url, 'not download url'

        r = requests.head(self.url)
        assert r.status_code == 200, 'http head request error'
        self.total = int(r.headers['Content-Length'])  # Byte

    @property
    def name(self):
        return urlparse(self.url).path.split('/')[-1]

    def get_ranges(self):
        ranges = []
        offset  = self.total // self.num
        for i in range(self.num):
            if i == self.num - 1:
                ranges.append((i * offset, ""))
            else:
                ranges.append((i * offset, (i + 1) * offset))

        return ranges

    def download(self,start,end):
        headers = {'Range': 'Bytes={}-{}'.format(start, end), 'Accept-Encoding': '*'}
        r = requests.get(self.url, headers=headers)
        print('{}-{} download success'.format(start, end))

        self.fd.seek(start)
        self.fd.write(r.content)

    def run(self):
        self.fd = open(self.name, 'wb')
        threads = []
        for r in self.get_ranges():
            start, end = r
            thread = threading.Thread(target=self.download, args=(start, end))
            thread.start()
            threads.append(thread)

        print('downloading...')
        for i in threads:
            i.join()

        self.fd.close()


if __name__ == '__main__':
    url = sys.argv[1]
    Downloader(url).run()
